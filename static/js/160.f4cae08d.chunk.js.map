{"version":3,"file":"static/js/160.f4cae08d.chunk.js","mappings":"6OAEaA,EAAgBC,EAAAA,EAAAA,GAAH,+GAQbC,EAAgBD,EAAAA,EAAAA,GAAH,0K,8BCPbE,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAKvBC,GAAwBC,EAAAA,EAAAA,IACnC,CAP4B,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAIP,SAAAL,GAAK,OAAIA,EAAMM,MAAV,IAI/B,SAACL,EAAUK,GACT,OAAKA,EAGEL,EAASK,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cADf,IAFrBR,CAKV,I,SCiBH,EA3BoB,WAClB,IAAMA,GAAWU,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAId,IAEZe,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACL,IAIJ,OACE,4BACE,sCACA,SAAChB,EAAD,UACGK,GACCA,EAASiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMY,EAAb,EAAaA,OAAb,OACX,UAACtB,EAAD,WACGU,EADH,KACWY,GACT,SAAC,MAAD,CAAsBC,QAAS,kBAV1B,SAAAF,GAAE,OAAIP,GAASU,EAAAA,EAAAA,IAAcH,GAA3B,CAU8BI,CAASJ,EAAf,MAFbA,EADT,QAStB,ECzBc,SAASK,IACtB,IAAMZ,GAAWC,EAAAA,EAAAA,MACXX,GAAYS,EAAAA,EAAAA,IAAYZ,GAM9B,OAJAiB,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACL,KAGF,iCACE,SAACa,EAAA,EAAD,WACE,gDAEF,yBAAMvB,GAAa,4BACnB,SAAC,EAAD,MAGL,C","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/pages/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerList = styled.ul`\ndisplay: flex;\njustify-content: space-between;\nmargin: 0;\npadding: 0;\nwidth: 50%;\n`;\n\nexport const ContainerItem = styled.li`\n  padding: 6px 0;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n\n","import { useEffect } from 'react';\nimport { ContainerItem, ContainerList } from './ContactList.styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ContainerList>\n        {contacts &&\n          contacts.map(({ id, name, number }) => (\n            <ContainerItem key={id}>\n              {name}: {number}\n              <AiOutlineCloseCircle onClick={() => onDelete(id)} />\n            </ContainerItem>\n          ))}\n      </ContainerList>\n    </div>\n  );\n};\n\nexport default ContactList;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport  ContactList  from 'components/ContactList/ContactList';\nimport { fetchContacts  } from 'redux/contacts/operations';\nimport { selectIsLoading} from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts ());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList/>\n    </>\n  );\n}\n"],"names":["ContainerList","styled","ContainerItem","selectIsLoading","state","contacts","isLoading","selectVisibleContacts","createSelector","items","filter","contact","name","toLowerCase","includes","useSelector","dispatch","useDispatch","console","log","useEffect","fetchContacts","map","id","number","onClick","deleteContact","onDelete","ContactsPage","Helmet"],"sourceRoot":""}