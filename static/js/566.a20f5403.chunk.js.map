{"version":3,"file":"static/js/566.a20f5403.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.js","redux/contacts/selectors.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/phonebook/Phonebook.styled.js","components/filter/Filter.styled.js","components/filter/Filter.js","components/phonebook/Phonebook.js","components/pages/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerForm = styled.form`\nwidth: 400px;\npadding: 40px;\nmargin: 50px auto;\npadding-left: 150px;\n  /* box-shadow: rgb(0 0 0 / 20%) 0px 9px 9px -6px,\n    rgb(0 0 0 / 14%) 0px 9px 12px 0px, rgb(0 0 0 / 12%) 0px 3px 24px 0px;\n  border-radius: 20px; */\n`;\n\nexport const ContainerInput = styled.label`\nmargin-bottom: 10px;\nwidth: 300px;\ndisplay: flex;\njustify-content: space-between;\nfont-size: 18px;\nfont-weight: 500;\n  box-shadow: rgb(0 0 0 / 20%) 0px 9px 9px -6px,\n    rgb(0 0 0 / 14%) 0px 9px 12px 0px, rgb(0 0 0 / 12%) 0px 3px 24px 0px; */\n  border-radius: 7px;\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n\n","import { useState } from 'react';\nimport { ContainerForm, ContainerInput } from './Contact.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const isExist = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${form.elements.name.value} is already in contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    setName('');\n    setNumber('');\n    form.reset();\n  };\n\n  const handleChangeName = event => setName(event.target.value);\n\n  const handleChangeNumber = event => setNumber(event.target.value);\n\n  return (\n    <ContainerForm action=\"\" onSubmit={handleOnSubmit}>\n      <ContainerInput htmlFor=\"\" name=\"name\">\n        Name\n        <input\n          value={name}\n          onChange={handleChangeName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContainerInput>\n      <ContainerInput htmlFor=\"\" name=\"number\">\n        Number\n        <input\n          value={number}\n          onChange={handleChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContainerInput>\n\n      <button type=\"submit\">Add contact</button>\n    </ContainerForm>\n  );\n};\n\nexport default ContactForm;\n\n\n","import styled from '@emotion/styled';\n\nexport const ContainerList = styled.ul`\ndisplay: flex;\njustify-content: space-between;\nmargin: 0;\npadding: 0;\nwidth: 50%;\n`;\n\nexport const ContainerItem = styled.li`\n  padding: 6px 0;\n  min-width: 300px;\n  display: flex;\n  gap: 16px;\n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n`;","import { useEffect } from 'react';\nimport { ContainerItem, ContainerList } from './ContactList.styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ContainerList>\n        {contacts &&\n          contacts.map(({ id, name, number }) => (\n            <ContainerItem key={id}>\n              {name}: {number}\n              <AiOutlineCloseCircle onClick={() => onDelete(id)} />\n            </ContainerItem>\n          ))}\n      </ContainerList>\n    </div>\n  );\n};\n\nexport default ContactList;","\nimport styled from '@emotion/styled';\n\nexport const ContainerSettings = styled.div`\n\n  display: flex;\n  flex-direction: row;\n\n  justify-content: space-between;\n  top: 80px;\n\n\n`;\nexport const Title = styled.h1`\n\n  color: yellow;\n  \n`;","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  text-align: center;\n  margin-top: 30px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterContainer } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    console.log(e.target.value);\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterContainer>\n      <p>Find contacts by name</p>\n      <input onChange={handleFilterChange} type=\"search\" name=\"filter\" />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/Contact/Contact';\nimport ContactList from 'components/ContactList/ContactList';\nimport { ContainerSettings, Title } from './Phonebook.styled';\nimport Filter from 'components/filter/Filter';\n\nexport const Phonebook = () => {\n  return (\n    <>\n      <ContainerSettings>\n        <div>\n          <ContactForm />\n          {/* <h2>Filter</h2> */}\n          <Filter />\n        </div>\n        <div>\n          <Title>Phonebook</Title>\n        </div>\n\n        <ContactList />\n      </ContainerSettings>\n    </>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Phonebook } from 'components/phonebook/Phonebook';\nimport { fetchContacts  } from 'redux/contacts/operations';\nimport { selectIsLoading} from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts ());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Phonebook/>\n    </>\n  );\n}\n"],"names":["ContainerForm","styled","ContainerInput","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","action","onSubmit","event","preventDefault","form","currentTarget","find","elements","value","alert","addContact","reset","htmlFor","onChange","target","type","pattern","title","required","ContainerList","ContainerItem","useEffect","fetchContacts","map","id","onClick","deleteContact","onDelete","ContainerSettings","Title","FilterContainer","e","console","log","setFilter","Phonebook","Contact","ContactsPage","Helmet"],"sourceRoot":""}